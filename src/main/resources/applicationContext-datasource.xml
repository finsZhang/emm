<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--配置Ecard数据源-->
    <bean id="dataSourceEcard" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
                <constructor-arg>
                    <props>
                        <prop key="dataSource.url">${ecard.jdbc.jdbcUrl}</prop>
                        <prop key="dataSource.user">${ecard.jdbc.user}</prop>
                        <prop key="dataSource.password">${ecard.jdbc.password}</prop>
                    </props>
                </constructor-arg>
                <property name="dataSourceClassName" value="${ecard.dataSourceClassName}" />
                <!--关闭连接时，是否提交未提交的事务，默认为true，即关闭连接，回滚未提交的事务 -->
                <property name="autoCommit" value="${jdbc.autoCommit}"/>
                <!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
                <property name="connectionTimeout" value="${jdbc.connectionTimeout}" />
                <!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
                <property name="idleTimeout" value="${jdbc.maxIdleTime}" />
                <!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL
                    wait_timeout参数（show variables like '%timeout%';） -->
                <property name="maxLifetime" value="${jdbc.maxLifetime}" />
                <!-- 连接只读数据库时配置为true， 保证安全 -->
                <property name="readOnly" value="${jdbc.readOnly}" />
                <!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
                <property name="maximumPoolSize" value="${jdbc.maxPoolSize}" />
                <property name="minimumIdle" value="${jdbc.minimumIdle}"/>
                <property name="poolName" value="${ecard.poolName}"/>
                <!-- This property controls the maximum amount of time that a connection will be tested for aliveness. -->
                <property name="validationTimeout" value="${jdbc.validationTimeout}"/>
                <property name="connectionTestQuery" value="${jdbc.connectionTestQuery}"/>
            </bean>
        </constructor-arg>
    </bean>
    <!--配置EMM数据源-->
    <bean id="dataSourceEmm" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
                <constructor-arg>
                    <props>
                        <prop key="dataSource.url">${emm.jdbc.jdbcUrl}</prop>
                        <prop key="dataSource.user">${emm.jdbc.user}</prop>
                        <prop key="dataSource.password">${emm.jdbc.password}</prop>
                    </props>
                </constructor-arg>
                <property name="dataSourceClassName" value="${emm.dataSourceClassName}" />
                <!--关闭连接时，是否提交未提交的事务，默认为true，即关闭连接，回滚未提交的事务 -->
                <property name="autoCommit" value="${jdbc.autoCommit}"/>
                <!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
                <property name="connectionTimeout" value="${jdbc.connectionTimeout}" />
                <!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
                <property name="idleTimeout" value="${jdbc.maxIdleTime}" />
                <!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL
                    wait_timeout参数（show variables like '%timeout%';） -->
                <property name="maxLifetime" value="${jdbc.maxLifetime}" />
                <!-- 连接只读数据库时配置为true， 保证安全 -->
                <property name="readOnly" value="${jdbc.readOnly}" />
                <!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
                <property name="maximumPoolSize" value="${jdbc.maxPoolSize}" />
                <property name="minimumIdle" value="${jdbc.minimumIdle}"/>
                <property name="poolName" value="${emm.poolName}"/>
                <!-- This property controls the maximum amount of time that a connection will be tested for aliveness. -->
                <property name="validationTimeout" value="${jdbc.validationTimeout}"/>
                <property name="connectionTestQuery" value="${jdbc.connectionTestQuery}"/>
            </bean>
        </constructor-arg>
    </bean>
</beans>